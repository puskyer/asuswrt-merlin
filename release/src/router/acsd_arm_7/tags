!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACS11H	acsd_svr.h	92;"	d
ACSD_BUFSIZE_4K	acsd.h	181;"	d
ACSD_CHANIM	acsd.h	86;"	d
ACSD_DEBUG	acsd.h	82;"	d
ACSD_DEBUG_CHANIM	acsd.h	49;"	d
ACSD_DEBUG_DETAIL	acsd.h	48;"	d
ACSD_DEBUG_DFSR	acsd.h	51;"	d
ACSD_DEBUG_ERROR	acsd.h	45;"	d
ACSD_DEBUG_FCS	acsd.h	50;"	d
ACSD_DEBUG_INFO	acsd.h	47;"	d
ACSD_DEBUG_WARNING	acsd.h	46;"	d
ACSD_DFLT_CLI_PORT	acsd.h	55;"	d
ACSD_DFLT_FD	acsd.h	54;"	d
ACSD_DFLT_POLL_INTERVAL	acsd_svr.h	30;"	d
ACSD_DFSR	acsd.h	94;"	d
ACSD_ERROR	acsd.h	70;"	d
ACSD_ERR_NOT_ACTVS	acsd_svr.h	23;"	d
ACSD_ERR_NOT_DCSREQ	acsd_svr.h	24;"	d
ACSD_ERR_NO_FRM	acsd_svr.h	22;"	d
ACSD_FAIL	acsd_svr.h	21;"	d
ACSD_FCS	acsd.h	90;"	d
ACSD_IFNAME_SIZE	acsd_svr.h	26;"	d
ACSD_INFO	acsd.h	78;"	d
ACSD_MAX_INTERFACES	acsd_svr.h	27;"	d
ACSD_OK	acsd_svr.h	20;"	d
ACSD_PRINT	acsd.h	103;"	d
ACSD_VERSION	acsd.h	53;"	d
ACSD_WARNING	acsd.h	74;"	d
ACS_BGNOISE_BASE	acsd_svr.h	51;"	d
ACS_BSS_TYPE_11A	acsd_svr.h	60;"	d
ACS_BSS_TYPE_11B	acsd_svr.h	59;"	d
ACS_BSS_TYPE_11G	acsd_svr.h	58;"	d
ACS_BSS_TYPE_11N	acsd_svr.h	61;"	d
ACS_BW_20	acsd_svr.h	53;"	d
ACS_BW_40	acsd_svr.h	54;"	d
ACS_BW_80	acsd_svr.h	55;"	d
ACS_BW_MAX	acsd_svr.h	56;"	d
ACS_CHANIM_BUF_LEN	acsd_chanim.c	17;"	d	file:
ACS_CHANNEL_1	acs.c	57;"	d	file:
ACS_CHANNEL_11	acs.c	59;"	d	file:
ACS_CHANNEL_6	acs.c	58;"	d	file:
ACS_CHAN_DWELL_TIME	acsd_svr.h	160;"	d
ACS_CHAN_FLOP_PERIOD	acsd_svr.h	166;"	d
ACS_CI_SCAN_CHAN_EXCL	acsd_svr.h	76;"	d
ACS_CI_SCAN_CHAN_PREF	acsd_svr.h	75;"	d
ACS_CI_SCAN_DWELL	acsd_svr.h	65;"	d
ACS_CI_SCAN_EXPIRE	acsd_svr.h	72;"	d
ACS_CI_SCAN_MIN_RSSI	acsd_svr.h	71;"	d
ACS_CI_SCAN_RUNNING_NORM	acsd_svr.h	80;"	d
ACS_CI_SCAN_RUNNING_PREF	acsd_svr.h	79;"	d
ACS_CI_SCAN_TIMEOUT	acsd_svr.h	162;"	d
ACS_CI_SCAN_WINDOW	acsd_svr.h	66;"	d
ACS_CS_MAX_2G_CHAN	acs.c	40;"	d	file:
ACS_CS_MAX_5G_CHAN	acs.c	42;"	d	file:
ACS_CS_MAX_CHAN	acs.c	48;"	d	file:
ACS_CS_MIN_2G_CHAN	acs.c	39;"	d	file:
ACS_CS_MIN_5G_CHAN	acs.c	41;"	d	file:
ACS_CS_MIN_CHAN	acs.c	45;"	d	file:
ACS_CS_SCAN_DWELL	acsd_svr.h	64;"	d
ACS_CS_SCAN_MIN_RSSI	acsd_svr.h	70;"	d
ACS_CS_SCAN_TIMER_MIN	acsd_svr.h	67;"	d
ACS_DFLT_CI_SCAN_TIMER	acsd_svr.h	69;"	d
ACS_DFLT_CS_SCAN_TIMER	acsd_svr.h	68;"	d
ACS_DFLT_FLAGS	acs.c	69;"	d	file:
ACS_DFSR_CTX	acsd_svr.h	365;"	d
ACS_DFS_DISABLED	acsd_svr.h	155;"	d
ACS_DFS_ENABLED	acsd_svr.h	156;"	d
ACS_DFS_REENTRY	acsd_svr.h	157;"	d
ACS_ERR	acsd.h	116;"	d
ACS_FCS_CHANIM_STATS	acsd_svr.h	164;"	d
ACS_FCS_MODE	acsd_svr.h	46;"	d
ACS_FCS_MODE_DEFAULT	acsd_svr.h	165;"	d
ACS_FLAGS_CI_SCAN	acsd_svr.h	40;"	d
ACS_FLAGS_FAST_DCS	acsd_svr.h	41;"	d
ACS_FLAGS_INTF_THRES_BGN	acsd_svr.h	37;"	d
ACS_FLAGS_INTF_THRES_CCA	acsd_svr.h	36;"	d
ACS_FLAGS_LASTUSED_CHK	acsd_svr.h	39;"	d
ACS_FLAGS_NOBIAS_11B	acsd_svr.h	38;"	d
ACS_FLAGS_SCAN_TIMER_OFF	acsd_svr.h	42;"	d
ACS_FREE	acsd.h	109;"	d
ACS_INTFER_SAMPLE_COUNT	acsd_svr.h	169;"	d
ACS_INTFER_SAMPLE_PERIOD	acsd_svr.h	168;"	d
ACS_INTFER_TCPTXFAIL_THRESH	acsd_svr.h	171;"	d
ACS_INTFER_TXFAIL_THRESH	acsd_svr.h	170;"	d
ACS_INVALID_144	acsd.h	173;"	d
ACS_INVALID_ALIGN	acsd.h	172;"	d
ACS_INVALID_CHAN_FLOP_PERIOD	acsd.h	175;"	d
ACS_INVALID_COEX	acsd.h	167;"	d
ACS_INVALID_DFS	acsd.h	174;"	d
ACS_INVALID_DFS_NO_11H	acsd.h	179;"	d
ACS_INVALID_EXCL	acsd.h	176;"	d
ACS_INVALID_INTF_BGN	acsd.h	169;"	d
ACS_INVALID_INTF_CCA	acsd.h	168;"	d
ACS_INVALID_MISMATCH_SB	acsd.h	177;"	d
ACS_INVALID_NOISE	acsd.h	171;"	d
ACS_INVALID_OVLP	acsd.h	170;"	d
ACS_INVALID_SAMECHAN	acsd.h	178;"	d
ACS_LOWBAND_LEAST_RSSI	acsd_svr.h	158;"	d
ACS_MAX_IF_NUM	acsd_svr.h	28;"	d
ACS_MAX_LIST_LEN	acsd_svr.h	149;"	d
ACS_MAX_VECTOR_LEN	acsd_svr.h	148;"	d
ACS_MIN_SCORE	acsd_svr.h	50;"	d
ACS_MODE_11H	acsd_svr.h	89;"	d
ACS_MODE_COEXCHECK	acsd_svr.h	88;"	d
ACS_MODE_DISABLE	acsd_svr.h	85;"	d
ACS_MODE_MONITOR	acsd_svr.h	86;"	d
ACS_MODE_SELECT	acsd_svr.h	87;"	d
ACS_NOFCS_LEAST_RSSI	acsd_svr.h	159;"	d
ACS_NOT_ALIGN_WT	acsd_svr.h	48;"	d
ACS_NUMCHANNELS	acsd_svr.h	82;"	d
ACS_POLICY_CUSTOMIZED1	acsd_svr.h	/^	ACS_POLICY_CUSTOMIZED1	= 5,$/;"	e	enum:__anon10
ACS_POLICY_CUSTOMIZED2	acsd_svr.h	/^	ACS_POLICY_CUSTOMIZED2	= 6,$/;"	e	enum:__anon10
ACS_POLICY_DEFAULT	acsd_svr.h	/^	ACS_POLICY_DEFAULT	= 0,$/;"	e	enum:__anon10
ACS_POLICY_FCS	acsd_svr.h	/^	ACS_POLICY_FCS		= 7,$/;"	e	enum:__anon10
ACS_POLICY_INTF	acsd_svr.h	/^	ACS_POLICY_INTF		= 2,$/;"	e	enum:__anon10
ACS_POLICY_INTF_BUSY	acsd_svr.h	/^	ACS_POLICY_INTF_BUSY	= 3,$/;"	e	enum:__anon10
ACS_POLICY_LEGACY	acsd_svr.h	/^	ACS_POLICY_LEGACY	= 1,$/;"	e	enum:__anon10
ACS_POLICY_MAX	acsd_svr.h	/^	ACS_POLICY_MAX		= ACS_POLICY_USER$/;"	e	enum:__anon10
ACS_POLICY_OPTIMIZED	acsd_svr.h	/^	ACS_POLICY_OPTIMIZED	= 4,$/;"	e	enum:__anon10
ACS_POLICY_USER	acsd_svr.h	/^	ACS_POLICY_USER		= 8,$/;"	e	enum:__anon10
ACS_SCAN_CHANIM_STATS	acsd_svr.h	163;"	d
ACS_SM_BUF_LEN	acs.c	54;"	d	file:
ACS_SRSLT_BUF_LEN	acs.c	55;"	d	file:
ACS_STATUS_POLL	acsd_svr.h	94;"	d
ACS_TXDELAY_CNT	acsd_svr.h	152;"	d
ACS_TXDELAY_PERIOD	acsd_svr.h	151;"	d
ACS_TXDELAY_RATIO	acsd_svr.h	153;"	d
ACS_TX_IDLE_CNT	acsd_svr.h	161;"	d
ACS_WPS_RUNNING	acsd_svr.h	174;"	d
ACTION_DO_COMMAND	acsd_cli.c	/^	ACTION_DO_COMMAND = 0,		\/* Regular cli command *\/$/;"	e	enum:__anon8	file:
ACTION_REPORT_EVERYTHING	acsd_cli.c	/^	ACTION_REPORT_EVERYTHING	\/* Dump everything *\/$/;"	e	enum:__anon8	file:
ACTION_REPORT_VARIABLES	acsd_cli.c	/^	ACTION_REPORT_VARIABLES,	\/* Dump all variables *\/$/;"	e	enum:__anon8	file:
ACTION_SHOW_COMMANDS	acsd_cli.c	/^	ACTION_SHOW_COMMANDS,		\/* Show command list *\/$/;"	e	enum:__anon8	file:
ACTION_SHOW_USAGE	acsd_cli.c	/^	ACTION_SHOW_USAGE,		\/* Provide usage help *\/$/;"	e	enum:__anon8	file:
ASSERT	chan_utils.c	6;"	d	file:
AUTOCHANNEL	acsd_svr.h	90;"	d
BAND_2G	acs.c	51;"	d	file:
BAND_5G	acs.c	52;"	d	file:
BSSID	acsd_svr.h	/^	struct ether_addr BSSID;$/;"	m	struct:acs_bss_info_sm_s	typeref:struct:acs_bss_info_sm_s::ether_addr
CHANIM_CHECK_START	acsd_svr.h	143;"	d
CHANIM_DFLT_LOCKOUT_PERIOD	acsd_svr.h	121;"	d
CHANIM_DFLT_MAX_ACS	acsd_svr.h	120;"	d
CHANIM_DFLT_SAMPLE_PERIOD	acsd_svr.h	118;"	d
CHANIM_DFLT_SCB_ACTIVITY_TIME	acsd_svr.h	125;"	d
CHANIM_DFLT_SCB_MAX_PROBE	acsd_svr.h	123;"	d
CHANIM_DFLT_SCB_TIMEOUT	acsd_svr.h	124;"	d
CHANIM_DFLT_THRESHOLD_TIME	acsd_svr.h	119;"	d
CHANIM_FLAGS_RELATIVE_THRES	acsd_svr.h	145;"	d
CHANIM_FLAGS_USE_CRSGLITCH	acsd_svr.h	146;"	d
CHANIM_GET	acsd_cmd.c	19;"	d	file:
CHANIM_LOCKOUT_PERIOD_MAX	acsd_svr.h	140;"	d
CHANIM_LOCKOUT_PERIOD_MIN	acsd_svr.h	139;"	d
CHANIM_MAX_ACS_MAX	acsd_svr.h	137;"	d
CHANIM_MAX_ACS_MIN	acsd_svr.h	136;"	d
CHANIM_SAMPLE_PERIOD_MAX	acsd_svr.h	131;"	d
CHANIM_SAMPLE_PERIOD_MIN	acsd_svr.h	130;"	d
CHANIM_SET	acsd_cmd.c	32;"	d	file:
CHANIM_STATE_ACTON	acsd_svr.h	114;"	d
CHANIM_STATE_DETECTED	acsd_svr.h	113;"	d
CHANIM_STATE_DETECTING	acsd_svr.h	112;"	d
CHANIM_STATE_LOCKOUT	acsd_svr.h	115;"	d
CHANIM_STATS_RECORD	acsd_svr.h	142;"	d
CHANIM_THRESHOLD_TIME_MAX	acsd_svr.h	134;"	d
CHANIM_THRESHOLD_TIME_MIN	acsd_svr.h	133;"	d
CHANIM_TXOP_BASE	acsd_svr.h	127;"	d
CHANNEL_NUM_2G	acs.c	/^int CHANNEL_NUM_2G = 11;$/;"	v
CH_SCORE_ADJ	acsd.h	164;"	d
CH_SCORE_BGNOISE	acsd.h	160;"	d
CH_SCORE_BSS	acsd.h	154;"	d
CH_SCORE_BUSY	acsd.h	155;"	d
CH_SCORE_CNS	acsd.h	162;"	d
CH_SCORE_FCS	acsd.h	158;"	d
CH_SCORE_INTF	acsd.h	156;"	d
CH_SCORE_INTFADJ	acsd.h	157;"	d
CH_SCORE_MAX	acsd.h	165;"	d
CH_SCORE_TOTAL	acsd.h	161;"	d
CH_SCORE_TXPWR	acsd.h	159;"	d
CI_SCAN	acsd_svr.h	44;"	d
CMDARG_COMMAND	acsd_cli.c	/^	CMDARG_COMMAND = 0,	\/* cmdarg[] array indices. *\/$/;"	e	enum:__anon7	file:
CMDARG_MAX	acsd_cli.c	/^	CMDARG_MAX$/;"	e	enum:__anon7	file:
CMDARG_PARAMETER	acsd_cli.c	/^	CMDARG_PARAMETER = 1,$/;"	e	enum:__anon7	file:
CMDARG_VALUE	acsd_cli.c	/^	CMDARG_VALUE = 2,$/;"	e	enum:__anon7	file:
COEXCHECK	acsd_svr.h	91;"	d
CTLCH_IS_BAND2	chan_utils.c	/^CTLCH_IS_BAND2(chanspec_t chspec)$/;"	f
CTLCH_IS_BAND4	chan_utils.c	/^CTLCH_IS_BAND4(chanspec_t chspec)$/;"	f
DCS_CSA_COUNT	acsd_svr.h	32;"	d
DEFAULT_SERVER_HOST	acsd_cli.c	48;"	d	file:
DEFAULT_SERVER_PORT	acsd_cli.c	51;"	d	file:
DEFAULT_WL_IFNAME	acsd_cli.c	47;"	d	file:
DFS_REENTRY_DEFERRED	acs_dfsr.h	/^	DFS_REENTRY_DEFERRED,$/;"	e	enum:__anon6
DFS_REENTRY_IMMEDIATE	acs_dfsr.h	/^	DFS_REENTRY_IMMEDIATE$/;"	e	enum:__anon6
DFS_REENTRY_NONE	acs_dfsr.h	/^	DFS_REENTRY_NONE = 0,$/;"	e	enum:__anon6
FCS_CSA_COUNT	acsd_svr.h	33;"	d
HERE	acsd.h	107;"	d
KEY_SIZE	acs_dfsr.c	201;"	d	file:
OBJS	Makefile	/^OBJS = dcs.o acs.o acsd_utils.o acsd_main.o acsd_cmd.o acsd_chanim.o$/;"	m
PICK_CANDIDATE	acs.c	/^typedef enum { PICK_NONE = 0, PICK_CURRENT, PICK_CANDIDATE } channel_pick_t;$/;"	e	enum:__anon5	file:
PICK_CURRENT	acs.c	/^typedef enum { PICK_NONE = 0, PICK_CURRENT, PICK_CANDIDATE } channel_pick_t;$/;"	e	enum:__anon5	file:
PICK_NONE	acs.c	/^typedef enum { PICK_NONE = 0, PICK_CURRENT, PICK_CANDIDATE } channel_pick_t;$/;"	e	enum:__anon5	file:
PREFIX_LEN	acs.c	36;"	d	file:
RES_SZ	acs.c	2581;"	d	file:
RSSI	acsd_svr.h	/^	int16 RSSI;$/;"	m	struct:acs_bss_info_sm_s
SCAN_TIMER_ON	acsd_svr.h	45;"	d
SSID	acsd_svr.h	/^	uint8 SSID[32];$/;"	m	struct:acs_bss_info_sm_s
SSID_FMT_BUF_LEN	acsd.h	124;"	d
SSID_len	acsd_svr.h	/^	uint8 SSID_len;$/;"	m	struct:acs_bss_info_sm_s
SW_NUM_SLOTS	acs_dfsr.c	27;"	d	file:
WF_NUM_5G_160M_CHANS	chan_utils.h	19;"	d
WF_NUM_5G_40M_CHANS	chan_utils.h	7;"	d
WF_NUM_5G_80M_CHANS	chan_utils.h	13;"	d
WF_NUM_5G_80M_CTL_CHANS	chan_utils.h	30;"	d
WF_NUM_5G_80M_CTL_CHANS_BAND2	chan_utils.h	35;"	d
WF_NUM_5G_80M_CTL_CHANS_BAND4	chan_utils.h	40;"	d
WF_NUM_BW	chan_utils.h	25;"	d
W_ACTIVITY	acs_dfsr.c	/^enum { W_IMMEDIATE = 0, W_DEFERRED, W_ACTIVITY, W_COUNT };$/;"	e	enum:__anon4	file:
W_COUNT	acs_dfsr.c	/^enum { W_IMMEDIATE = 0, W_DEFERRED, W_ACTIVITY, W_COUNT };$/;"	e	enum:__anon4	file:
W_DEFERRED	acs_dfsr.c	/^enum { W_IMMEDIATE = 0, W_DEFERRED, W_ACTIVITY, W_COUNT };$/;"	e	enum:__anon4	file:
W_IMMEDIATE	acs_dfsr.c	/^enum { W_IMMEDIATE = 0, W_DEFERRED, W_ACTIVITY, W_COUNT };$/;"	e	enum:__anon4	file:
__acs_dfsr_h__	acs_dfsr.h	17;"	d
_acsd_h_	acsd.h	16;"	d
_acsd_srv_h_	acsd_svr.h	16;"	d
_chan_utils_h_	chan_utils.h	2;"	d
aAPs	acsd.h	/^	uint8 aAPs;	  \/* # of 20MHz LG\/HT\/VHT BSSs seen in 5G band *\/$/;"	m	struct:acs_chan_bssinfo
acs_add_map	acs.c	/^acs_add_map(char *name)$/;"	f	file:
acs_bss_info_entry_s	acsd_svr.h	/^typedef struct acs_bss_info_entry_s {$/;"	s
acs_bss_info_entry_t	acsd_svr.h	/^} acs_bss_info_entry_t;$/;"	t	typeref:struct:acs_bss_info_entry_s
acs_bss_info_q	acsd_svr.h	/^	acs_bss_info_entry_t *acs_bss_info_q; \/* up-to-date parsed scan result queue *\/$/;"	m	struct:acs_chaninfo
acs_bss_info_sm_s	acsd_svr.h	/^typedef struct acs_bss_info_sm_s {$/;"	s
acs_bss_info_sm_t	acsd_svr.h	/^} acs_bss_info_sm_t;$/;"	t	typeref:struct:acs_bss_info_sm_s
acs_bss_is_11b	acs.c	/^acs_bss_is_11b(wl_bss_info_t* bi)$/;"	f	file:
acs_build_candidates	acs.c	/^acs_build_candidates(acs_chaninfo_t *c_info, int bw)$/;"	f	file:
acs_build_scanlist	acs.c	/^acs_build_scanlist(acs_chaninfo_t *c_info)$/;"	f	file:
acs_candidate_adjacent_bss	acs.c	/^acs_candidate_adjacent_bss(ch_candidate_t *candi, acs_chaninfo_t* c_info)$/;"	f	file:
acs_candidate_check_intf	acs.c	/^acs_candidate_check_intf(ch_candidate_t *candi, acs_chaninfo_t* c_info)$/;"	f	file:
acs_candidate_score	acs.c	/^acs_candidate_score(acs_chaninfo_t* c_info, int bw)$/;"	f	file:
acs_candidate_score_bgnoise	acs.c	/^acs_candidate_score_bgnoise(ch_candidate_t *candi, acs_chaninfo_t* c_info)$/;"	f	file:
acs_candidate_score_bss	acs.c	/^acs_candidate_score_bss(ch_candidate_t *candi, acs_chaninfo_t* c_info)$/;"	f	file:
acs_candidate_score_busy	acs.c	/^acs_candidate_score_busy(ch_candidate_t *candi, acs_chaninfo_t* c_info)$/;"	f	file:
acs_candidate_score_cns	acs.c	/^acs_candidate_score_cns(ch_candidate_t *candi, acs_chaninfo_t* c_info)$/;"	f	file:
acs_candidate_score_fcs	acs.c	/^acs_candidate_score_fcs(ch_candidate_t *candi, acs_chaninfo_t* c_info)$/;"	f	file:
acs_candidate_score_intf	acs.c	/^acs_candidate_score_intf(ch_candidate_t *candi, acs_chaninfo_t* c_info)$/;"	f	file:
acs_candidate_score_intfadj	acs.c	/^acs_candidate_score_intfadj(ch_candidate_t *candi, acs_chaninfo_t* c_info)$/;"	f	file:
acs_candidate_score_total	acs.c	/^acs_candidate_score_total(ch_candidate_t *candi)$/;"	f	file:
acs_candidate_score_txpwr	acs.c	/^acs_candidate_score_txpwr(ch_candidate_t *candi, acs_chaninfo_t* c_info)$/;"	f	file:
acs_ch_score_name	acsd_utils.c	/^acs_ch_score_name(const int ch_score_index)$/;"	f
acs_chan_bssinfo	acsd.h	/^typedef struct acs_chan_bssinfo {$/;"	s
acs_chan_bssinfo_t	acsd.h	/^} acs_chan_bssinfo_t;$/;"	t	typeref:struct:acs_chan_bssinfo
acs_chan_dwell_time	acsd_svr.h	/^	uint8 acs_chan_dwell_time;	\/* least chan dwell time *\/$/;"	m	struct:acs_fcs_s
acs_chan_flop_period	acsd_svr.h	/^	uint16 acs_chan_flop_period;	\/* least interval to reselect same chan *\/$/;"	m	struct:acs_fcs_s
acs_chan_score_bss	acs.c	/^acs_chan_score_bss(ch_candidate_t* candi, acs_chan_bssinfo_t* bss_info, int ncis)$/;"	f	file:
acs_chaninfo	acsd_svr.h	/^typedef struct acs_chaninfo {$/;"	s
acs_chaninfo_t	acsd_svr.h	/^} acs_chaninfo_t;$/;"	t	typeref:struct:acs_chaninfo
acs_channel	acsd.h	/^typedef struct acs_channel {$/;"	s
acs_channel_info	acs.c	/^static uint32 acs_channel_info(acs_chaninfo_t *c_info, chanspec_t chspec)$/;"	f	file:
acs_channel_t	acsd.h	/^} acs_channel_t;$/;"	t	typeref:struct:acs_channel
acs_check_assoc_scb	acs.c	/^acs_check_assoc_scb(acs_chaninfo_t * c_info)$/;"	f	file:
acs_ci_scan_count	acsd_svr.h	/^	uint8 acs_ci_scan_count;	\/* how many channel left for current ci_scan loop *\/$/;"	m	struct:acs_fcs_s
acs_ci_scan_timeout	acsd_svr.h	/^	uint32 acs_ci_scan_timeout;	\/* start ci scan if ci_scan timeout *\/$/;"	m	struct:acs_fcs_s
acs_ci_scan_timer	acsd_svr.h	/^	uint acs_ci_scan_timer; \/* ci scan timer *\/$/;"	m	struct:acs_chaninfo
acs_ci_scan_update_idx	acs.c	/^acs_ci_scan_update_idx(acs_scan_chspec_t *chspec_q, uint8 increment)$/;"	f	file:
acs_cleanup	acs.c	/^acs_cleanup(acs_info_t ** acs_info_p)$/;"	f
acs_cleanup_scan_entry	acs.c	/^acs_cleanup_scan_entry(acs_chaninfo_t *c_info)$/;"	f
acs_cli_info	acsd_cli.c	/^typedef struct acs_cli_info {$/;"	s	file:
acs_cli_info_t	acsd_cli.c	/^} acs_cli_info_t;$/;"	t	typeref:struct:acs_cli_info	file:
acs_coex_check	acs.c	/^acs_coex_check(acs_chaninfo_t* c_info, chanspec_t input_chspec)$/;"	f	file:
acs_cs_scan_timer	acsd_svr.h	/^	uint acs_cs_scan_timer;	\/* cs scan timer *\/$/;"	m	struct:acs_chaninfo
acs_dcs_csa	acsd_svr.h	/^	uint8 acs_dcs_csa;$/;"	m	struct:acs_fcs_s
acs_default_policy	acs.c	/^acs_default_policy(acs_policy_t *a_pol, acs_policy_index index)$/;"	f
acs_dfs	acsd_svr.h	/^	uint8 acs_dfs;		\/* enable\/disable DFS chan as first chan and DFS Reentry *\/$/;"	m	struct:acs_fcs_s
acs_dfs_channel_is_usable	acs.c	/^acs_dfs_channel_is_usable(acs_chaninfo_t *c_info, chanspec_t chspec)$/;"	f	file:
acs_dfsr	acsd_svr.h	/^	dfsr_context_t	*acs_dfsr;	\/* DFS Re-Entry related per interface data *\/$/;"	m	struct:acs_fcs_s
acs_dfsr_activity_update	acs_dfsr.c	/^acs_dfsr_activity_update(dfsr_context_t *ctx, char *if_name)$/;"	f
acs_dfsr_chanspec_update	acs_dfsr.c	/^acs_dfsr_chanspec_update(dfsr_context_t *ctx, chanspec_t channel, const char *caller)$/;"	f
acs_dfsr_dump	acs_dfsr.c	/^acs_dfsr_dump(dfsr_context_t *ctx, char *buf, unsigned buflen)$/;"	f
acs_dfsr_enable	acs_dfsr.c	/^acs_dfsr_enable(dfsr_context_t *ctx, bool enable)$/;"	f
acs_dfsr_enabled	acs_dfsr.c	/^acs_dfsr_enabled(dfsr_context_t *ctx)$/;"	f
acs_dfsr_exit	acs_dfsr.c	/^acs_dfsr_exit(dfsr_context_t *ctx)$/;"	f
acs_dfsr_init	acs_dfsr.c	/^acs_dfsr_init(char *prefix, bool enable)$/;"	f
acs_dfsr_load_config	acs_dfsr.c	/^acs_dfsr_load_config(dfsr_context_t *ctx, char *prefix)$/;"	f	file:
acs_dfsr_reentry_done	acs_dfsr.c	/^acs_dfsr_reentry_done(dfsr_context_t *ctx)$/;"	f
acs_dfsr_reentry_type	acs_dfsr.c	/^acs_dfsr_reentry_type(dfsr_context_t *ctx)$/;"	f
acs_do_ci_update	acs.c	/^acs_do_ci_update(uint ticks, acs_chaninfo_t * c_info)$/;"	f
acs_dump_candi	acsd_cli.c	/^acs_dump_candi(ch_candidate_t * candi)$/;"	f	file:
acs_dump_ch_score_body	acsd_cli.c	/^acs_dump_ch_score_body(ch_score_t * scores, bool dump_all)$/;"	f	file:
acs_dump_ch_score_head	acsd_cli.c	/^acs_dump_ch_score_head(ch_score_t * scores, bool dump_all)$/;"	f	file:
acs_dump_chan_bss	acs.c	/^acs_dump_chan_bss(acs_chan_bssinfo_t* bssinfo, int ncis)$/;"	f	file:
acs_dump_config_extra	acs.c	/^acs_dump_config_extra(acs_chaninfo_t *c_info)$/;"	f	file:
acs_dump_cscore_body	acsd_cli.c	/^acs_dump_cscore_body(ch_candidate_t * candi)$/;"	f	file:
acs_dump_cscore_head	acsd_cli.c	/^acs_dump_cscore_head(ch_candidate_t *cscore)$/;"	f	file:
acs_dump_map	acs.c	/^acs_dump_map(void)$/;"	f	file:
acs_dump_policy	acs.c	/^acs_dump_policy(acs_policy_t *a_pol)$/;"	f	file:
acs_dump_reason	acsd_cli.c	/^acs_dump_reason(ch_candidate_t * candi)$/;"	f	file:
acs_dump_scan_entry	acs.c	/^acs_dump_scan_entry(acs_chaninfo_t *c_info)$/;"	f
acs_dump_score	acsd_utils.c	/^acs_dump_score(ch_score_t * score_p)$/;"	f
acs_expire_scan_entry	acs.c	/^acs_expire_scan_entry(acs_chaninfo_t *c_info, time_t limit)$/;"	f
acs_fcs	acsd_svr.h	/^	acs_fcs_t acs_fcs;$/;"	m	struct:acs_chaninfo
acs_fcs_chanim_stats	acsd_svr.h	/^	int acs_fcs_chanim_stats;	\/* chanim_stats value to mark chan is busy *\/$/;"	m	struct:acs_fcs_s
acs_fcs_ci_scan_check	acs.c	/^acs_fcs_ci_scan_check(acs_chaninfo_t *c_info)$/;"	f
acs_fcs_ci_scan_finish_check	acs.c	/^acs_fcs_ci_scan_finish_check(acs_chaninfo_t * c_info)$/;"	f	file:
acs_fcs_mode	acsd_svr.h	/^	uint8 acs_fcs_mode; \/* 0: disable fcs mode, 1:  enable fcs mode *\/$/;"	m	struct:acs_chaninfo
acs_fcs_retrieve_config	acs.c	/^acs_fcs_retrieve_config(acs_chaninfo_t *c_info, char * prefix)$/;"	f	file:
acs_fcs_s	acsd_svr.h	/^typedef struct acs_fcs_s {$/;"	s
acs_fcs_t	acsd_svr.h	/^} acs_fcs_t;$/;"	t	typeref:struct:acs_fcs_s
acs_fcs_tx_idle_check	acs.c	/^acs_fcs_tx_idle_check(acs_chaninfo_t *c_info)$/;"	f	file:
acs_get_rs_info	acs.c	/^acs_get_rs_info(acs_chaninfo_t * c_info, char* prefix)$/;"	f	file:
acs_get_scan	acs.c	/^acs_get_scan(char* name, char *scan_buf, uint buf_len)$/;"	f	file:
acs_has_valid_candidate	acs.c	/^acs_has_valid_candidate(acs_chaninfo_t* c_info, int bw)$/;"	f	file:
acs_idx_from_map	acs.c	/^acs_idx_from_map(char *name)$/;"	f
acs_ifmap	acsd_svr.h	/^	ifname_idx_map_t acs_ifmap[ACS_MAX_IF_NUM];$/;"	m	struct:__anon17
acs_info	acs.c	/^acs_info_t *acs_info;$/;"	v
acs_info	acsd_svr.h	/^	acs_info_t *acs_info;$/;"	m	struct:acsd_wksp_s
acs_info_t	acsd_svr.h	/^} acs_info_t;$/;"	t	typeref:struct:__anon17
acs_init_info	acs.c	/^acs_init_info(acs_info_t ** acs_info_p)$/;"	f	file:
acs_init_run	acs.c	/^acs_init_run(acs_info_t ** acs_info_p)$/;"	f
acs_insert_scan_entry	acs.c	/^acs_insert_scan_entry(acs_chaninfo_t *c_info, acs_bss_info_entry_t * new)$/;"	f	file:
acs_intfer_config	acs.c	/^int acs_intfer_config(acs_chaninfo_t *c_info)$/;"	f
acs_is_dfs_chanspec	acs.c	/^acs_is_dfs_chanspec(acs_chaninfo_t *c_info, chanspec_t chspec)$/;"	f	file:
acs_is_initial_selection	acs.c	/^acs_is_initial_selection(acs_chaninfo_t* c_info)$/;"	f	file:
acs_lowband_least_rssi	acsd_svr.h	/^	int acs_lowband_least_rssi;	\/* least rssi value for select low power chan *\/$/;"	m	struct:acs_fcs_s
acs_nofcs_least_rssi	acsd_svr.h	/^	int acs_nofcs_least_rssi;	\/* least rssi value to stop fcs *\/$/;"	m	struct:acs_fcs_s
acs_parse_chanspec	acs.c	/^acs_parse_chanspec(chanspec_t chanspec, acs_channel_t* chan_ptr)$/;"	f	file:
acs_pick_better_dfsr	acs.c	/^acs_pick_better_dfsr(ch_candidate_t *candidate, ch_candidate_t *current, int score_type)$/;"	f	file:
acs_pick_better_score	acs.c	/^acs_pick_better_score(ch_candidate_t *candidate, ch_candidate_t *current, int score_type)$/;"	f	file:
acs_pick_chanspec	acs.c	/^acs_pick_chanspec(acs_chaninfo_t* c_info, int bw)$/;"	f	file:
acs_pick_chanspec_common	acs.c	/^acs_pick_chanspec_common(acs_chaninfo_t *c_info, int bw, int score_type)$/;"	f	file:
acs_pick_chanspec_default	acs.c	/^acs_pick_chanspec_default(acs_chaninfo_t* c_info, int bw)$/;"	f	file:
acs_pick_chanspec_fcs_policy	acs.c	/^acs_pick_chanspec_fcs_policy(acs_chaninfo_t *c_info, int bw)$/;"	f	file:
acs_policy	acsd_svr.h	/^	acs_policy_t acs_policy; \/* the current policy in use *\/$/;"	m	struct:acs_chaninfo
acs_policy_index	acsd_svr.h	/^} acs_policy_index;$/;"	t	typeref:enum:__anon10
acs_policy_name	acsd_cmd.c	/^acs_policy_name(acs_policy_index i)$/;"	f	file:
acs_policy_s	acsd_svr.h	/^typedef struct acs_policy_s {$/;"	s
acs_policy_t	acsd_svr.h	/^} acs_policy_t;$/;"	t	typeref:struct:acs_policy_s
acs_remove_noisy_cns	acs.c	/^acs_remove_noisy_cns(ch_candidate_t *candi, int c_count, int distance)$/;"	f	file:
acs_request_data	acs.c	/^acs_request_data(acs_chaninfo_t *c_info)$/;"	f
acs_retrieve_config	acs.c	/^acs_retrieve_config(acs_chaninfo_t *c_info, char * prefix)$/;"	f	file:
acs_rsi	acsd_svr.h	/^typedef struct acs_rsi {$/;"	s
acs_rsi_t	acsd_svr.h	/^} acs_rsi_t;$/;"	t	typeref:struct:acs_rsi
acs_run_ci_scan	acs.c	/^acs_run_ci_scan(acs_chaninfo_t *c_info)$/;"	f
acs_run_cs_scan	acs.c	/^acs_run_cs_scan(acs_chaninfo_t *c_info)$/;"	f
acs_safe_get_conf	acsd_utils.c	/^acs_safe_get_conf(char *outval, int outval_size, char *name)$/;"	f
acs_scan_chanim_stats	acsd_svr.h	/^	int acs_scan_chanim_stats;	\/* chanim_stats to trigger ci_scan  *\/$/;"	m	struct:acs_fcs_s
acs_scan_chspec_s	acsd_svr.h	/^typedef struct acs_scan_chspec_s {$/;"	s
acs_scan_chspec_t	acsd_svr.h	/^} acs_scan_chspec_t;$/;"	t	typeref:struct:acs_scan_chspec_s
acs_scan_entry_expire	acsd_svr.h	/^	uint32 acs_scan_entry_expire; \/* sec: how long to expire an scan entry *\/$/;"	m	struct:acs_chaninfo
acs_scan_prep	acs.c	/^acs_scan_prep(acs_chaninfo_t *c_info, wl_scan_params_t *params, int *params_size)$/;"	f	file:
acs_scan_timer_or_dfsr_check	acs.c	/^acs_scan_timer_or_dfsr_check(acs_chaninfo_t * c_info)$/;"	f
acs_select_chspec	acs.c	/^acs_select_chspec(acs_chaninfo_t *c_info)$/;"	f
acs_selector_t	acsd_svr.h	/^typedef chanspec_t (*acs_selector_t)(struct acs_chaninfo *c_info, int bw);$/;"	t
acs_set_chan_table	acs.c	/^acs_set_chan_table(char *channel_list, chanspec_t *chspec_list,$/;"	f	file:
acs_set_chspec	acs.c	/^acs_set_chspec(acs_chaninfo_t * c_info)$/;"	f
acs_start	acs.c	/^acs_start(char *name, acs_chaninfo_t ** c_info_ptr)$/;"	f	file:
acs_trigger_name	acsd_cli.c	/^acs_trigger_name(int trigger)$/;"	f	file:
acs_trigger_var	acsd_svr.h	/^	int8 acs_trigger_var;$/;"	m	struct:__anon12
acs_trigger_var	acsd_svr.h	/^	range_t acs_trigger_var;$/;"	m	struct:__anon14
acs_tx_idle_cnt	acsd_svr.h	/^	uint32 acs_tx_idle_cnt;		\/* no of tx frames in tx_idle_period *\/$/;"	m	struct:acs_fcs_s
acs_txdelay_cnt	acsd_svr.h	/^	uint8 acs_txdelay_cnt;		\/* txdelay sample count *\/$/;"	m	struct:acs_fcs_s
acs_txdelay_period	acsd_svr.h	/^	uint8 acs_txdelay_period;	\/* txdelay sample period *\/$/;"	m	struct:acs_fcs_s
acs_txdelay_ratio	acsd_svr.h	/^	int16 acs_txdelay_ratio;	\/* txdelay jump ratio *\/$/;"	m	struct:acs_fcs_s
acs_txframe	acsd_svr.h	/^	uint32 acs_txframe;			\/* current txframe *\/$/;"	m	struct:acs_fcs_s
acs_update_chan_bssinfo	acs.c	/^acs_update_chan_bssinfo(acs_chaninfo_t *c_info)$/;"	f	file:
acs_update_driver	acs.c	/^acs_update_driver(acs_chaninfo_t * c_info)$/;"	f
acs_update_scanresult_queue	acs.c	/^acs_update_scanresult_queue(acs_chaninfo_t *c_info)$/;"	f	file:
acs_update_status	acs.c	/^acs_update_status(acs_chaninfo_t * c_info)$/;"	f
acs_weight	acsd_svr.h	/^	int acs_weight[CH_SCORE_MAX];$/;"	m	struct:acs_policy_s
acsd_chanim_check	acsd_chanim.c	/^acsd_chanim_check(uint ticks, acs_chaninfo_t *c_info)$/;"	f
acsd_chanim_init	acsd_chanim.c	/^acsd_chanim_init(acs_chaninfo_t *c_info)$/;"	f
acsd_chanim_query	acsd_chanim.c	/^acsd_chanim_query(acs_chaninfo_t * c_info, uint32 count, uint32 ticks)$/;"	f
acsd_cleanup	acsd_main.c	/^acsd_cleanup(void)$/;"	f	file:
acsd_close_eventfd	acsd_main.c	/^acsd_close_eventfd()$/;"	f	file:
acsd_close_listenfd	acsd_main.c	/^acsd_close_listenfd()$/;"	f	file:
acsd_commands	acsd_cli.c	/^acsd_commands[] = {$/;"	v	file:
acsd_debug_level	acsd_utils.c	/^int acsd_debug_level = ACSD_DEBUG_ERROR;$/;"	v
acsd_display_chanim	acsd_chanim.c	/^acsd_display_chanim(chanim_stats_t* stats)$/;"	f	file:
acsd_dump_chanim	acsd_chanim.c	/^acsd_dump_chanim(wl_chanim_stats_t* chanim_stats)$/;"	f	file:
acsd_extract_token_val	acsd_cmd.c	/^acsd_extract_token_val(char* data, const char *token, char *output, int len)$/;"	f	file:
acsd_init	acsd_main.c	/^acsd_init(void)$/;"	f	file:
acsd_main_loop	acsd_main.c	/^acsd_main_loop(struct timeval *tv)$/;"	f	file:
acsd_malloc	acsd_utils.c	/^acsd_malloc(int bufsize)$/;"	f
acsd_open_eventfd	acsd_main.c	/^acsd_open_eventfd()$/;"	f	file:
acsd_pass_candi	acsd_cmd.c	/^acsd_pass_candi(ch_candidate_t * candi, int count, char* buf, uint* r_size)$/;"	f	file:
acsd_proc_client_req	acsd_main.c	/^acsd_proc_client_req(void)$/;"	f	file:
acsd_proc_cmd	acsd_cmd.c	/^acsd_proc_cmd(acsd_wksp_t* d_info, char* buf, uint rcount, uint* r_size)$/;"	f
acsd_stats_t	acsd_svr.h	/^} acsd_stats_t;$/;"	t	typeref:struct:__anon16
acsd_svr_socket_init	acsd_main.c	/^acsd_svr_socket_init(unsigned int port)$/;"	f	file:
acsd_swap	acsd_utils.c	/^bool acsd_swap = FALSE;$/;"	v
acsd_update_chanim	acsd_chanim.c	/^acsd_update_chanim(acs_chaninfo_t * c_info, chanim_stats_t * stats, uint ticks)$/;"	f	file:
acsd_validate_wlpvt_message	acsd_main.c	/^acsd_validate_wlpvt_message(int bytes, uint8 *dpkt)$/;"	f	file:
acsd_variables	acsd_cli.c	/^acsd_variables[] = {	\/* Sorted alphabetically for nicer help display *\/$/;"	v	file:
acsd_watchdog	acsd_main.c	/^acsd_watchdog(uint ticks)$/;"	f	file:
acsd_wksp_s	acsd_svr.h	/^typedef struct acsd_wksp_s {$/;"	s
acsd_wksp_t	acsd_svr.h	/^} acsd_wksp_t;$/;"	t	typeref:struct:acsd_wksp_s
acsdc_check_resp_err	acsd_cli.c	/^acsdc_check_resp_err(acs_cli_info_t *context)$/;"	f	file:
acsdc_table_lookup	acsd_cli.c	/^acsdc_table_lookup(const char **table, const char *str)$/;"	f	file:
acsddbg	acsd.h	102;"	d
action	acsd_cli.c	/^	cli_action_t	action;		\/* Type of action to perform. *\/$/;"	m	struct:acs_cli_info	file:
bAPs	acsd.h	/^	uint8 bAPs;   \/* # of 20MHz 11b BSSs seen in 2.4G band *\/$/;"	m	struct:acs_chan_bssinfo
band_type	acsd_svr.h	/^	int band_type;$/;"	m	struct:acs_rsi
base	acsd_svr.h	/^	chanim_stats_t base;  \/* base value for the existing stats *\/$/;"	m	struct:__anon15
best_score	acsd_svr.h	/^	int best_score; \/* best score for channel in use *\/$/;"	m	struct:__anon11
bgnoise_rel_thres	acsd_svr.h	/^	range_t bgnoise_rel_thres;$/;"	m	struct:__anon14
bgnoise_thres	acsd_svr.h	/^	int8 bgnoise_thres;$/;"	m	struct:acs_policy_s
bgnoise_thres	acsd_svr.h	/^	range_t bgnoise_thres; \/* background noise threshold *\/$/;"	m	struct:__anon14
binfo_local	acsd_svr.h	/^	acs_bss_info_sm_t binfo_local;$/;"	m	struct:acs_bss_info_entry_s
bw_cap	acsd_svr.h	/^	int bw_cap;$/;"	m	struct:acs_rsi
c_count	acsd_svr.h	/^	int c_count[ACS_BW_MAX];$/;"	m	struct:acs_chaninfo
candidate	acsd_svr.h	/^	ch_candidate_t * candidate[ACS_BW_MAX];$/;"	m	struct:acs_chaninfo
capmode2str	acsd_utils.c	/^capmode2str(uint16 capability)$/;"	f	file:
ccastats_rel_thres	acsd_svr.h	/^	range_t ccastats_rel_thres;$/;"	m	struct:__anon14
ccastats_thres	acsd_svr.h	/^	range_t ccastats_thres;$/;"	m	struct:__anon14
ch_bssinfo	acsd_svr.h	/^	acs_chan_bssinfo_t* ch_bssinfo;$/;"	m	struct:acs_chaninfo
ch_candidate	acsd.h	/^typedef struct ch_candidate {$/;"	s
ch_candidate_t	acsd.h	/^} ch_candidate_t;$/;"	t	typeref:struct:ch_candidate
ch_score	acsd.h	/^typedef struct ch_score {$/;"	s
ch_score_t	acsd.h	/^} ch_score_t;$/;"	t	typeref:struct:ch_score
chan_info	acsd_svr.h	/^	acs_chaninfo_t* chan_info[ACS_MAX_IF_NUM];$/;"	m	struct:__anon17
chan_selector	acsd_svr.h	/^	acs_selector_t chan_selector;$/;"	m	struct:acs_policy_s
chanim_act_delay	acsd_svr.h	238;"	d
chanim_base	acsd_svr.h	237;"	d
chanim_chk_lockout	acsd_chanim.c	/^chanim_chk_lockout(chanim_info_t *ch_info)$/;"	f	file:
chanim_config	acsd_svr.h	235;"	d
chanim_config_init	acsd_chanim.c	/^chanim_config_init(chanim_info_t * ch_info)$/;"	f	file:
chanim_config_t	acsd_svr.h	/^} chanim_config_t;$/;"	t	typeref:struct:__anon12
chanim_info	acsd_svr.h	/^	chanim_info_t* chanim_info; \/* chanim monitor\/triggering struct *\/$/;"	m	struct:acs_chaninfo
chanim_info_t	acsd_svr.h	/^} chanim_info_t;$/;"	t	typeref:struct:__anon15
chanim_intf_detected	acsd_chanim.c	/^chanim_intf_detected(chanim_info_t *ch_info)$/;"	f	file:
chanim_mark	acsd_svr.h	234;"	d
chanim_mark_t	acsd_svr.h	/^} chanim_mark_t;$/;"	t	typeref:struct:__anon11
chanim_range	acsd_svr.h	236;"	d
chanim_range_t	acsd_svr.h	/^} chanim_range_t;$/;"	t	typeref:struct:__anon14
chanim_record_chan_dwell	acsd_main.c	/^chanim_record_chan_dwell(acs_chaninfo_t *c_info, chanim_info_t *ch_info)$/;"	f	file:
chanim_restore_scbprobe	acsd_chanim.c	/^chanim_restore_scbprobe(acs_chaninfo_t * c_info)$/;"	f	file:
chanim_scb_lastused	acsd_chanim.c	/^chanim_scb_lastused(acs_chaninfo_t* c_info)$/;"	f
chanim_speedup_scbprobe	acsd_chanim.c	/^chanim_speedup_scbprobe(acs_chaninfo_t * c_info)$/;"	f	file:
chanim_stats	acsd_svr.h	/^	wl_chanim_stats_t* chanim_stats; \/* chanim_stats from scan *\/$/;"	m	struct:acs_chaninfo
chanim_txop_to_noise	acsd_chanim.c	/^chanim_txop_to_noise(uint8 txop)$/;"	f
chanim_upd_acs_record	acsd_chanim.c	/^chanim_upd_acs_record(chanim_info_t *ch_info, chanspec_t selected, uint8 trigger)$/;"	f
chanim_upd_state	acsd_chanim.c	/^chanim_upd_state(acs_chaninfo_t * c_info)$/;"	f	file:
chanim_update_base	acsd_chanim.c	/^chanim_update_base(chanim_stats_t * base, chanim_stats_t tmp)$/;"	f	file:
chanim_update_state	acsd_chanim.c	/^chanim_update_state(acs_chaninfo_t *c_info, bool state)$/;"	f	file:
channel	acs_dfsr.c	/^	chanspec_t		channel;		\/* currently selected chanspec *\/$/;"	m	struct:dfsr_context	file:
channel	acsd.h	/^	uint8 channel;$/;"	m	struct:acs_chan_bssinfo
channel_pick_t	acs.c	/^typedef enum { PICK_NONE = 0, PICK_CURRENT, PICK_CANDIDATE } channel_pick_t;$/;"	t	typeref:enum:__anon5	file:
chanspec	acsd_svr.h	/^	chanspec_t chanspec;$/;"	m	struct:acs_bss_info_sm_s
chanspecbuf	acs.c	/^char chanspecbuf[32];$/;"	v
chscore	acsd.h	/^	ch_score_t chscore[CH_SCORE_MAX];$/;"	m	struct:ch_candidate
chspec	acsd.h	/^	chanspec_t chspec;$/;"	m	struct:ch_candidate
chspec	acsd_svr.h	/^	chanspec_t chspec;$/;"	m	struct:scan_chspec_elemt_s
chspec_info	acsd_svr.h	/^	uint32 chspec_info;$/;"	m	struct:scan_chspec_elemt_s
chspec_list	acsd_svr.h	/^	scan_chspec_elemt_t* chspec_list;$/;"	m	struct:acs_scan_chspec_s
ci_pref_scan_request	acsd_svr.h	/^	bool ci_pref_scan_request; \/* need to start ci scan for pref chan? *\/$/;"	m	struct:acs_scan_chspec_s
ci_scan_running	acsd_svr.h	/^	uint8 ci_scan_running;	\/* is ci_scan running *\/$/;"	m	struct:acs_scan_chspec_s
cli_action_t	acsd_cli.c	/^} cli_action_t;$/;"	t	typeref:enum:__anon8	file:
clist	acsd_svr.h	/^	chanspec_t clist[ACS_MAX_LIST_LEN];$/;"	m	struct:fcs_conf_chspec_s
cmd_buf	acsd_cli.c	/^	char cmd_buf[ACSD_BUFSIZE_4K];	\/* Server command and response buffer *\/$/;"	m	struct:acs_cli_info	file:
cmd_buf	acsd_svr.h	/^	char* cmd_buf; \/* CLI buf *\/$/;"	m	struct:acsd_wksp_s
cmdarg	acsd_cli.c	/^	const char *cmdarg[CMDARG_MAX];	\/* ASCIZ String pointers: command, parameter, and value *\/$/;"	m	struct:acs_cli_info	file:
cmpchspec	acs.c	/^cmpchspec(const void *p1, const void *p2)$/;"	f	file:
coex_enb	acsd_svr.h	/^	bool coex_enb;$/;"	m	struct:acs_rsi
config	acsd_svr.h	/^	chanim_config_t config;$/;"	m	struct:__anon15
conn_fd	acsd_svr.h	/^	int conn_fd; \/* client connection fd *\/$/;"	m	struct:acsd_wksp_s
connect_to_server	acsd_cli.c	/^connect_to_server(acs_cli_info_t *ctx)$/;"	f	file:
control	acsd.h	/^	uint8 control;$/;"	m	struct:acs_channel
count	acsd_svr.h	/^	uint16 count;$/;"	m	struct:fcs_conf_chspec_s
count	acsd_svr.h	/^	uint8 count;$/;"	m	struct:acs_scan_chspec_s
create_server_command	acsd_cli.c	/^create_server_command(acs_cli_info_t *ctx)$/;"	f	file:
crsglitch_thres	acsd_svr.h	/^	range_t crsglitch_thres;$/;"	m	struct:__anon14
cur_chspec	acsd_svr.h	/^	chanspec_t cur_chspec;$/;"	m	struct:acs_chaninfo
cur_is_dfs	acsd_svr.h	/^	bool cur_is_dfs;$/;"	m	struct:acs_chaninfo
curslot	acs_dfsr.c	/^	unsigned curslot;$/;"	m	struct:__anon2	file:
d_info	acsd_main.c	/^acsd_wksp_t *d_info;$/;"	v
dcs_handle_request	dcs.c	/^dcs_handle_request(char* ifname, wl_bcmdcs_data_t *dcs_data,$/;"	f
dcs_parse_actframe	dcs.c	/^dcs_parse_actframe(dot11_action_wifi_vendor_specific_t *actfrm, wl_bcmdcs_data_t *dcs_data)$/;"	f
default_params	acs_dfsr.c	/^static dfsr_window_params_t default_params[W_COUNT] = {$/;"	v	file:
detected	acsd_svr.h	/^	bool detected;$/;"	m	struct:__anon11
detecttime	acsd_svr.h	/^	time_t detecttime;$/;"	m	struct:__anon11
dfsr_context	acs_dfsr.c	/^struct dfsr_context {$/;"	s	file:
dfsr_context_t	acs_dfsr.h	/^typedef struct dfsr_context dfsr_context_t;$/;"	t	typeref:struct:dfsr_context
dfsr_reentry_type_t	acs_dfsr.h	/^} dfsr_reentry_type_t;$/;"	t	typeref:enum:__anon6
dfsr_sw_add	acs_dfsr.c	/^dfsr_sw_add(dfsr_window_t *sw, unsigned int slottime, sw_counter value)$/;"	f	file:
dfsr_sw_clear	acs_dfsr.c	/^dfsr_sw_clear(dfsr_window_t *sw)$/;"	f
dfsr_sw_sum	acs_dfsr.c	/^dfsr_sw_sum(dfsr_window_t *sw)$/;"	f
dfsr_window_name	acs_dfsr.c	/^dfsr_window_name(unsigned w)$/;"	f	file:
dfsr_window_params_t	acs_dfsr.c	/^} dfsr_window_params_t;$/;"	t	typeref:struct:__anon1	file:
dfsr_window_struct_t	acs_dfsr.c	/^} dfsr_window_struct_t;$/;"	t	typeref:struct:__anon2	file:
dfsr_window_t	acs_dfsr.c	/^} dfsr_window_t;$/;"	t	typeref:struct:__anon3	file:
disconnect_from_server	acsd_cli.c	/^disconnect_from_server(acs_cli_info_t *ctx)$/;"	f	file:
dispatch_lookup	acsd_cli.c	/^dispatch_lookup(const dispatch_table_t *dtable, const char *str)$/;"	f	file:
dispatch_table_t	acsd_cli.c	/^} dispatch_table_t;$/;"	t	typeref:struct:__anon9	file:
display_scan_entry_local	acs.c	/^display_scan_entry_local(acs_bss_info_sm_t * bsm)$/;"	f	file:
do_command_response	acsd_cli.c	/^do_command_response(acs_cli_info_t *ctx)$/;"	f	file:
do_dump_acs_record	acsd_cli.c	/^do_dump_acs_record(acs_cli_info_t *ctx, int rcount)$/;"	f	file:
do_dump_bss	acsd_cli.c	/^do_dump_bss(acs_cli_info_t *ctx, int rcount)$/;"	f	file:
do_dump_candidate	acsd_cli.c	/^do_dump_candidate(acs_cli_info_t *ctx, int rcount)$/;"	f	file:
do_dump_candidate_int	acsd_cli.c	/^do_dump_candidate_int(acs_cli_info_t *ctx, int rcount, bool pretty_display)$/;"	f	file:
do_dump_chanim	acsd_cli.c	/^do_dump_chanim(acs_cli_info_t *ctx, int rcount)$/;"	f	file:
do_dump_cscore	acsd_cli.c	/^do_dump_cscore(acs_cli_info_t *ctx, int rcount)$/;"	f	file:
dtoh16	acsd.h	61;"	d
dtoh32	acsd.h	60;"	d
dtohchanspec	acsd.h	63;"	d
dtohenum	acsd.h	66;"	d
dump_bss_info	acsd_utils.c	/^dump_bss_info(wl_bss_info_t *bi)$/;"	f	file:
dump_networks	acsd_utils.c	/^dump_networks(char *network_buf)$/;"	f
dump_rateset	acsd_utils.c	/^dump_rateset(uint8 *rates, uint count)$/;"	f
dump_table	acsd_cli.c	/^static const dispatch_table_t dump_table[] = {$/;"	v	file:
enabled	acs_dfsr.c	/^	bool			enabled;		\/* Runtime enable\/disable flag *\/$/;"	m	struct:dfsr_context	file:
event_fd	acsd_svr.h	/^	int event_fd;$/;"	m	struct:acsd_wksp_s
excl_chans	acsd_svr.h	/^	fcs_conf_chspec_t excl_chans; \/* Exclude chan list *\/$/;"	m	struct:acs_fcs_s
excl_count	acsd_svr.h	/^	uint8 excl_count;	\/* chan count of exclusive chan list *\/$/;"	m	struct:acs_scan_chspec_s
ext20	acsd.h	/^	uint8 ext20;$/;"	m	struct:acs_channel
ext40	acsd.h	/^	uint8 ext40[2];$/;"	m	struct:acs_channel
fcs_conf_chspec_s	acsd_svr.h	/^typedef struct fcs_conf_chspec_s {$/;"	s
fcs_conf_chspec_t	acsd_svr.h	/^} fcs_conf_chspec_t;$/;"	t	typeref:struct:fcs_conf_chspec_s
fdmax	acsd_svr.h	/^	int fdmax;$/;"	m	struct:acsd_wksp_s
fdset	acsd_svr.h	/^	fd_set fdset;$/;"	m	struct:acsd_wksp_s
flags	acsd_svr.h	/^	uint32 flags; \/* config flags *\/$/;"	m	struct:acs_chaninfo
flags	acsd_svr.h	/^	uint32 flags;$/;"	m	struct:__anon12
flags	acsd_svr.h	/^	uint32 flags;$/;"	m	struct:scan_chspec_elemt_s
func	acsd_cli.c	/^	int (*func)(acs_cli_info_t *ctx, int rcount); \/* Special dump function, NULL for text *\/$/;"	m	struct:__anon9	file:
gAPs	acsd.h	/^	uint8 gAPs;	  \/* # of 20MHz LG\/HT BSSs seen in 2.4G band *\/$/;"	m	struct:acs_chan_bssinfo
good_channel_var	acsd_svr.h	/^	range_t good_channel_var;$/;"	m	struct:__anon14
help_text	acsd_cli.c	/^	const char *help_text;			\/* Human readable help text for dump option list *\/$/;"	m	struct:__anon9	file:
htod16	acsd.h	59;"	d
htod32	acsd.h	58;"	d
htodchanspec	acsd.h	62;"	d
htodenum	acsd.h	64;"	d
idx	acsd_svr.h	/^	uint8 idx;$/;"	m	struct:acs_scan_chspec_s
idx	acsd_svr.h	/^    uint8 idx;$/;"	m	struct:ifname_idx_map
ifname_idx_map	acsd_svr.h	/^typedef struct ifname_idx_map {$/;"	s
ifname_idx_map_t	acsd_svr.h	/^} ifname_idx_map_t;$/;"	t	typeref:struct:ifname_idx_map
ifnames	acsd_svr.h	/^	char ifnames[ACSD_IFNAME_SIZE*ACSD_MAX_INTERFACES]; \/* interface names *\/$/;"	m	struct:acsd_wksp_s
in_use	acsd.h	/^	uint8 in_use;	\/* number of bss's using the identical channel spec *\/$/;"	m	struct:ch_candidate
in_use	acsd_svr.h	/^	bool in_use;$/;"	m	struct:ifname_idx_map
intf_threshold	acsd_svr.h	/^	uint8 intf_threshold;$/;"	m	struct:acs_policy_s
intfparams	acsd_svr.h	/^	wl_intfer_params_t intfparams; \/* intfer configuration parametres *\/$/;"	m	struct:acs_fcs_s
is_dfs	acsd.h	/^	bool is_dfs;$/;"	m	struct:ch_candidate
lSBs	acsd.h	/^	uint8 lSBs;	  \/* # of 40MHz HT\/VHT BSSs using this as "lower" ctl channel *\/$/;"	m	struct:acs_chan_bssinfo
listen_fd	acsd_svr.h	/^	int listen_fd; \/* server listen fd *\/$/;"	m	struct:acsd_wksp_s
llSBs	acsd.h	/^	uint8 llSBs;  \/* # of 80MHz VHT BSSs using this as LL ctl channel *\/$/;"	m	struct:acs_chan_bssinfo
lockout_period	acsd_svr.h	/^	range_t lockout_period;	\/* in seconds, time for one lockout period *\/$/;"	m	struct:__anon14
lockout_period	acsd_svr.h	/^	uint32 lockout_period;	\/* in seconds, time for one lockout period *\/$/;"	m	struct:__anon12
logmessage	chan_utils.c	/^void logmessage(char *logheader, char *fmt, ...)$/;"	f
luSBs	acsd.h	/^	uint8 luSBs;  \/* # of 80MHz VHT BSSs using this as LU ctl channel *\/$/;"	m	struct:acs_chan_bssinfo
main	acsd_cli.c	/^int main(int argc, char **argv)$/;"	f
main	acsd_main.c	/^main(int argc, char *argv[])$/;"	f
mark	acsd_svr.h	/^	chanim_mark_t mark;$/;"	m	struct:__anon15
max_acs	acsd_svr.h	/^	range_t max_acs;			\/* the maximum acs scans for one lockout period *\/$/;"	m	struct:__anon14
max_acs	acsd_svr.h	/^	uint8 max_acs;			\/* the maximum acs scans for one lockout period *\/$/;"	m	struct:__anon12
max_val	acsd_svr.h	/^	int max_val;$/;"	m	struct:__anon13
min_val	acsd_svr.h	/^	int min_val;$/;"	m	struct:__anon13
mode	acsd_svr.h	/^	int mode;$/;"	m	struct:acs_chaninfo
nEXs	acsd.h	/^	uint8 nEXs;	  \/* # of 40MHz HT\/VTH BSSs using this as extension channel *\/$/;"	m	struct:acs_chan_bssinfo
name	acsd_svr.h	/^	char name[16];$/;"	m	struct:acs_chaninfo
name	acsd_svr.h	/^	char name[16];$/;"	m	struct:ifname_idx_map
next	acsd_svr.h	/^	struct acs_bss_info_entry_s * next;$/;"	m	struct:acs_bss_info_entry_s	typeref:struct:acs_bss_info_entry_s::acs_bss_info_entry_s
num_cmds	acsd_svr.h	/^	uint num_cmds;  \/* total incoming cmds from the client *\/$/;"	m	struct:__anon16
num_events	acsd_svr.h	/^	uint num_events; \/* total event from the driver *\/$/;"	m	struct:__anon16
option	acsd_cli.c	/^	const char *option;			\/* The dump option string being processed *\/$/;"	m	struct:__anon9	file:
p	acs_dfsr.c	/^		dfsr_window_params_t p;$/;"	m	struct:__anon3	file:
packet	acsd_svr.h	/^	uint8 packet[ACSD_BUFSIZE_4K];$/;"	m	struct:acsd_wksp_s
parse_commandline	acsd_cli.c	/^parse_commandline(acs_cli_info_t *ctx, int argc, char *argv[])$/;"	f	file:
policy_index	acsd_svr.h	/^	acs_policy_index policy_index;$/;"	m	struct:acs_chaninfo
poll_interval	acsd_svr.h	/^	uint poll_interval; \/* polling interval *\/$/;"	m	struct:acsd_wksp_s
predefined_policy	acs.c	/^acs_policy_t predefined_policy[ACS_POLICY_MAX] = {$/;"	v
pref_chans	acsd_svr.h	/^	fcs_conf_chspec_t pref_chans; \/* Prefer chan list *\/$/;"	m	struct:acs_fcs_s
pref_chspec	acsd_svr.h	/^	chanspec_t pref_chspec;$/;"	m	struct:acs_rsi
pref_count	acsd_svr.h	/^	uint8 pref_count;	\/* chan count of prefer chan list *\/$/;"	m	struct:acs_scan_chspec_s
prev_bytes_rx	acs_dfsr.c	/^	unsigned		prev_bytes_rx;		\/* counter needed for deltas *\/$/;"	m	struct:dfsr_context	file:
prev_bytes_tx	acs_dfsr.c	/^	unsigned		prev_bytes_tx;		\/* counter needed for deltas *\/$/;"	m	struct:dfsr_context	file:
process_response	acsd_cli.c	/^process_response(acs_cli_info_t *ctx, int rcount)$/;"	f	file:
rand_seed_by_time	acs.c	/^static int rand_seed_by_time(void)$/;"	f	file:
range	acsd_svr.h	/^	chanim_range_t range;$/;"	m	struct:__anon15
range_t	acsd_svr.h	/^} range_t;$/;"	t	typeref:struct:__anon13
reason	acsd.h	/^	uint16 reason;$/;"	m	struct:ch_candidate
record	acsd_svr.h	/^	chanim_acs_record_t record[CHANIM_ACS_RECORD];$/;"	m	struct:__anon15
record_idx	acsd_svr.h	/^	uint8 record_idx;	\/* where the next acs record should locate *\/$/;"	m	struct:__anon11
reentry_count	acs_dfsr.c	/^	unsigned		reentry_count;		\/* dfs re-entry count *\/$/;"	m	struct:dfsr_context	file:
reentry_type	acs_dfsr.c	/^	dfsr_reentry_type_t	reentry_type;		\/* none, deferred, immediate *\/$/;"	m	struct:dfsr_context	file:
reg_11h	acsd_svr.h	/^	bool reg_11h;$/;"	m	struct:acs_rsi
report_all_dumps	acsd_cli.c	/^report_all_dumps(acs_cli_info_t *ctx)$/;"	f	file:
report_all_variables	acsd_cli.c	/^report_all_variables(acs_cli_info_t *ctx)$/;"	f	file:
report_everything	acsd_cli.c	/^report_everything(acs_cli_info_t *ctx)$/;"	f	file:
rs_info	acsd_svr.h	/^	acs_rsi_t rs_info;$/;"	m	struct:acs_chaninfo
sample_period	acsd_svr.h	/^	range_t sample_period;$/;"	m	struct:__anon14
sample_period	acsd_svr.h	/^	uint8 sample_period;	\/* in seconds, time to do a sampling measurement *\/$/;"	m	struct:__anon12
scan_chspec_elemt_s	acsd_svr.h	/^typedef struct scan_chspec_elemt_s {$/;"	s
scan_chspec_elemt_t	acsd_svr.h	/^} scan_chspec_elemt_t;$/;"	t	typeref:struct:scan_chspec_elemt_s
scan_chspec_list	acsd_svr.h	/^	acs_scan_chspec_t scan_chspec_list;$/;"	m	struct:acs_chaninfo
scan_results	acsd_svr.h	/^	wl_scan_results_t *scan_results; \/* raw scan results *\/$/;"	m	struct:acs_chaninfo
scb_activity_time	acsd_svr.h	/^	uint scb_activity_time; \/* original activity time *\/$/;"	m	struct:__anon11
scb_activity_time	acsd_svr.h	/^	uint scb_activity_time;$/;"	m	struct:__anon12
scb_max_probe	acsd_svr.h	/^	uint scb_max_probe; \/* original number of scb probe to conduct *\/$/;"	m	struct:__anon11
scb_max_probe	acsd_svr.h	/^	uint scb_max_probe; \/* when triggered by intf, how many times to probe *\/$/;"	m	struct:__anon12
scb_timeout	acsd_svr.h	/^	uint scb_timeout; \/* the storage for the original scb timeout that is swapped *\/$/;"	m	struct:__anon11
scb_timeout	acsd_svr.h	/^	uint scb_timeout;$/;"	m	struct:__anon12
score	acsd.h	/^	int score;$/;"	m	struct:ch_score
seconds	acs_dfsr.c	/^	unsigned	seconds;$/;"	m	struct:__anon1	file:
select_80M_chspec	chan_utils.c	/^select_80M_chspec(chanspec_t chanspec)$/;"	f
selected_chspec	acsd_svr.h	/^	chanspec_t selected_chspec;$/;"	m	struct:acs_chaninfo
server_host	acsd_cli.c	/^	const char *server_host;	\/* User specified server host (default=127.0.0.1) *\/$/;"	m	struct:acs_cli_info	file:
server_port	acsd_cli.c	/^	const char *server_port;	\/* User specified server port (def=ACSD_DFLT_CLI_PORT) *\/$/;"	m	struct:acs_cli_info	file:
show_command_list	acsd_cli.c	/^show_command_list(void)$/;"	f	file:
sleep_ms	acsd_utils.c	/^sleep_ms(const unsigned int ms)$/;"	f
slots	acs_dfsr.c	/^	sw_counter slots[SW_NUM_SLOTS];$/;"	m	struct:__anon2	file:
socket	acsd_cli.c	/^	int socket;			\/* Server connection socket number, -1 if closed *\/$/;"	m	struct:acs_cli_info	file:
sread	acsd_utils.c	/^sread(int fd, char *buf, unsigned int size)$/;"	f
state	acsd_svr.h	/^	uint8 state;$/;"	m	struct:__anon11
stats	acsd_svr.h	/^	acsd_stats_t stats;$/;"	m	struct:acsd_wksp_s
stats	acsd_svr.h	/^	chanim_stats_t stats[CHANIM_STATS_RECORD];$/;"	m	struct:__anon15
stats_idx	acsd_svr.h	/^	uint8 stats_idx;  	\/* where the next stats entry should locate *\/$/;"	m	struct:__anon11
str	acsd_cli.c	50;"	d	file:
sw_counter	acs_dfsr.c	/^typedef unsigned sw_counter;$/;"	t	file:
switch_count	acs_dfsr.c	/^	unsigned		switch_count;		\/* channel switch count *\/$/;"	m	struct:dfsr_context	file:
swrite	acsd_utils.c	/^swrite(int fd, char *buf, unsigned int size)$/;"	f
threshold	acs_dfsr.c	/^	unsigned	threshold;$/;"	m	struct:__anon1	file:
threshold_time	acsd_svr.h	/^	range_t threshold_time;	\/* number of sample period to trigger an action *\/$/;"	m	struct:__anon14
threshold_time	acsd_svr.h	/^	uint8 threshold_time;	\/* number of sample period to trigger an action *\/$/;"	m	struct:__anon12
ticks	acsd_svr.h	/^	uint ticks;			\/* number of polling intervals *\/$/;"	m	struct:acsd_wksp_s
ticks	acsd_svr.h	/^	uint ticks;$/;"	m	struct:__anon15
timestamp	acsd_svr.h	/^	time_t timestamp;$/;"	m	struct:acs_bss_info_entry_s
timestamp_acs_scan	acsd_svr.h	/^	uint32 timestamp_acs_scan;	\/* timestamp of last scan *\/$/;"	m	struct:acs_fcs_s
timestamp_tx_idle	acsd_svr.h	/^	uint32 timestamp_tx_idle;	\/* timestamp of last tx idle check *\/$/;"	m	struct:acs_fcs_s
type	acsd_svr.h	/^	uint type;$/;"	m	struct:acs_bss_info_sm_s
uSBs	acsd.h	/^	uint8 uSBs;	  \/* # of 40MHz HT\/VHT BSSs using this as "upper" ctl channel *\/$/;"	m	struct:acs_chan_bssinfo
ulSBs	acsd.h	/^	uint8 ulSBs;  \/* # of 80MHz VHT BSSs using this as UL ctl channel *\/$/;"	m	struct:acs_chan_bssinfo
usage	acsd_cli.c	/^usage(const char *pname)$/;"	f	file:
uuSBs	acsd.h	/^	uint8 uuSBs;  \/* # of 80MHz VHT BSSs using this as UU ctl channel *\/$/;"	m	struct:acs_chan_bssinfo
valid	acsd.h	/^	bool valid;$/;"	m	struct:ch_candidate
valid_cmds	acsd_svr.h	/^	uint valid_cmds; \/* valid cmds *\/$/;"	m	struct:__anon16
valid_events	acsd_svr.h	/^	uint valid_events; \/* valid events *\/$/;"	m	struct:__anon16
version	acsd_svr.h	/^	int version;$/;"	m	struct:acsd_wksp_s
w	acs_dfsr.c	/^		dfsr_window_struct_t w;$/;"	m	struct:__anon3	file:
wEX20s	acsd.h	/^	uint8 wEX20s; \/* # of 80MHz VHT BSSs using this as 20MHz extension *\/$/;"	m	struct:acs_chan_bssinfo
wEX40s	acsd.h	/^	uint8 wEX40s; \/* # of 80MHz VHT BSSs using this as (one side of) 40MHz extension *\/$/;"	m	struct:acs_chan_bssinfo
weight	acsd.h	/^	int weight;$/;"	m	struct:ch_score
wf_5g_160m_chans	chan_utils.h	/^static const uint8 wf_5g_160m_chans[] =$/;"	v
wf_5g_40m_chans	chan_utils.h	/^static const uint8 wf_5g_40m_chans[] =$/;"	v
wf_5g_80m_chans	chan_utils.h	/^static const uint8 wf_5g_80m_chans[] =$/;"	v
wf_5g_80m_ctl_chans	chan_utils.h	/^static const uint8 wf_5g_80m_ctl_chans[] =$/;"	v
wf_5g_80m_ctl_chans_band2	chan_utils.h	/^static const uint8 wf_5g_80m_ctl_chans_band2[] =$/;"	v
wf_5g_80m_ctl_chans_band4	chan_utils.h	/^static const uint8 wf_5g_80m_ctl_chans_band4[] =$/;"	v
wf_chspec_bw_mhz	chan_utils.h	/^static const uint8 wf_chspec_bw_mhz[] =$/;"	v
window	acs_dfsr.c	/^	dfsr_window_t		window[W_COUNT];	\/* various sliding windows *\/$/;"	m	struct:dfsr_context	file:
wl_chanspec_list_with_band_4	acs.c	/^wl_chanspec_list_with_band_4(int unit, int bw)$/;"	f	file:
wl_ether_etoa	acsd_utils.c	/^wl_ether_etoa(const struct ether_addr *n)$/;"	f
wl_format_ssid	acsd_utils.c	/^wl_format_ssid(char* ssid_buf, uint8* ssid, int ssid_len)$/;"	f
wl_ifname	acsd_cli.c	/^	const char *wl_ifname;		\/* User specified server wl interface name *\/$/;"	m	struct:acs_cli_info	file:
wl_sample_period	acsd_svr.h	/^	uint8 wl_sample_period; \/* sample time inside driver *\/$/;"	m	struct:__anon11
xstr	acsd_cli.c	49;"	d	file:
